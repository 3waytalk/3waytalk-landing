"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}();!function(){var e=function(){function e(){_classCallCheck(this,e);var t=new Promise(function(e,t){return"loading"!=document.readyState?e():void document.addEventListener("DOMContentLoaded",function(){return e()})});t.then(this.init.bind(this))}return _createClass(e,[{key:"init",value:function(){var e=document.querySelector(".header"),t=document.querySelector(".clock");$(".landing").fullpage({sectionSelector:".landing__section",navigation:!0,afterRender:this.recountSlides.bind(this),afterResize:this.recountSlides.bind(this),onLeave:function(n,o,i){1==o?e.classList.toggle("header_open",!1):e.classList.toggle("header_open",!0),6==o?t.classList.toggle("clock_visible",!0):t.classList.toggle("clock_visible",!1)}}),document.querySelector(".footer__top").addEventListener("click",this.scrollToTop.bind(this))}},{key:"recountSlides",value:function(){var e=document.querySelector(".clock"),t=document.querySelector(".fp-slidesContainer"),n=t.querySelector(".slide__title"),o=t.querySelector(".slide__text"),i=Math.min(t.offsetHeight-n.offsetHeight-o.offsetHeight+90,702),r=i/702;t.offsetWidth<=750?(e.style[Modernizr.prefixed("transform")]="scale("+r+")",e.style.margin="0 0 0 -"+e.offsetWidth*r*.33+"px"):e.removeAttribute("style")}},{key:"scrollToTop",value:function(e){e.preventDefault(),$.fn.fullpage.moveTo(1,0)}}]),e}();new e}();
"use strict";function _classCallCheck(i,e){if(!(i instanceof e))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function i(i,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(i,o.key,o)}}return function(e,n,o){return n&&i(e.prototype,n),o&&i(e,o),e}}();!function(){window.mobileAndTabletcheck=function(){var i=!1;return function(e){(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4)))&&(i=!0)}(navigator.userAgent||navigator.vendor||window.opera),i},window.isMobile={Android:function(){return/Android/i.test(navigator.userAgent)},BlackBerry:function(){return/BlackBerry/i.test(navigator.userAgent)},iOS:function(){return/iPhone|iPad|iPod/i.test(navigator.userAgent)},Windows:function(){return/IEMobile/i.test(navigator.userAgent)},any:function(){return isMobile.Android()||isMobile.BlackBerry()||isMobile.iOS()||isMobile.Windows()}};var i=function(){function i(){_classCallCheck(this,i);var e=new Promise(function(i,e){return"loading"!=document.readyState?i():void document.addEventListener("DOMContentLoaded",function(){return i()})});e.then(this.init.bind(this))}return _createClass(i,[{key:"init",value:function(){window.isMobile.Android()?document.body.parentNode.classList.add("android"):window.isMobile.iOS()?document.body.parentNode.classList.add("ios"):window.mobileAndTabletcheck()?document.body.parentNode.classList.add("unknown-mobile"):document.body.parentNode.classList.add("desktop")}}]),i}();new i}();
"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function t(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,i,n){return i&&t(e.prototype,i),n&&t(e,n),e}}();!function(){var t=function(){function t(){_classCallCheck(this,t);var e=new Promise(function(t,e){return"loading"!=document.readyState?t():void document.addEventListener("DOMContentLoaded",function(){return t()})});e.then(this.init.bind(this))}return _createClass(t,[{key:"init",value:function(){var t=this,e=document.querySelectorAll(".login__back");this.login_button=document.querySelector(".menu__login"),this.register_button=document.querySelector(".menu__register"),this.recovery_button=document.querySelector(".login__password-recovery"),this.lightbox=document.querySelector("body>.lightbox"),this.login_popup=document.querySelector(".login_login"),this.recovery=document.querySelector(".login_recovery"),this.recovery_form=this.recovery.querySelector(".login__form"),this.email=document.querySelector(".login_email"),this.success=document.querySelector(".login_success"),this.current=null,this.last=null,this.login_button.addEventListener("click",this.openLoginForm.bind(this)),this.recovery_button.addEventListener("click",this.openRecovery.bind(this)),this.lightbox.addEventListener("click",this.closeAll.bind(this)),this.recovery_form.addEventListener("submit",this.sendRecoveryData.bind(this)),[].forEach.call(e,function(e){e.addEventListener("click",t.goback.bind(t))})}},{key:"sendRecoveryData",value:function(t){var e=this;t.preventDefault();try{!function(){var t=4,i=200,n=new XMLHttpRequest,o=new Promise(function(o,r){n.open("POST",e.recovery_form.getAttribute("action")),n.setRequestHeader("Content-Type","application/json"),n.send(JSON.stringify({email:e.recovery_form.querySelector('[name="email"]')})),n.onreadystatechange=function(){n.readyState===t&&(e.recovery_form.reset(),n.status===i?o():r({code:parseInt(n.status,10),message:n.statusText}))}});o.then(e.showMessage.bind(e))["catch"](function(t){console.log(t.code,"Responce status code: "+t.code+". "+t.message+"."),e.showMessage()})}()}catch(i){console.log("error: ",i)}}},{key:"showMessage",value:function(){var t={right:-300},e={duration:250};Velocity(this.recovery,t,e),t={right:0},e={duration:250},Velocity(this.email,t,e),this.last=this.login_popup,this.current=this.email}},{key:"goback",value:function(){var t={right:-300},e={duration:250},i=this.last,n=this.current;Velocity(this.current,t,e),t={right:0},e={duration:250},Velocity(this.last,t,e),this.last=n,this.current=i}},{key:"emailHaveSend",value:function(){var t={right:-300},e={duration:250};Velocity(this.current,t,e),t={right:0},e={duration:250},Velocity(this.email,t,e),this.last=this.current,this.current=this.email}},{key:"openRecovery",value:function(){var t={right:-300},e={duration:250};Velocity(this.current,t,e),t={right:0},e={duration:250},Velocity(this.recovery,t,e),this.last=this.current,this.current=this.recovery}},{key:"closeAll",value:function(){var t=this,e={right:-300},i={duration:250};Velocity(this.current,e,i),this.current=null,e={opacity:0},i={complete:function(){t.lightbox.style.display="none"},duration:250},Velocity(this.lightbox,e,i)}},{key:"openLoginForm",value:function(t){var e=this;t.preventDefault();var i={right:0},n={duration:250};Velocity(this.login_popup,i,n),this.current=this.login_popup,i={opacity:1},n={begin:function(){e.lightbox.style.display="block"},duration:250},Velocity(this.lightbox,i,n)}}]),t}();new t}();
//# sourceMappingURL=data:application/json;base64,